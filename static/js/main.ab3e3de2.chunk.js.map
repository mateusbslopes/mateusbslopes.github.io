{"version":3,"sources":["components/molecules/Header.tsx","components/molecules/Body.tsx","components/molecules/Footer.tsx","components/pages/Home.tsx","themes/index.ts","themes/dark/index.ts","translations/pt-BR.ts","App.tsx","translations/index.ts","serviceWorker.ts","store/ducks/theme.ts","store/ducks/localization.ts","store/ducks/index.ts","index.tsx"],"names":["Header","css","style","id","colors","secundary","Body","value","Date","href","JobExperienceDate","year","month","StudyExperienceDate","font","sizes","margin","Footer","Home","dark","primary","100","900","ternary","500","title","base","family","200","300","400","now","introduction","introductionText","jobExperience","studyExperience","itTechnician","computingSystems","contact","connector","connect","state","theme","name","locale","localization","themes","messages","ptBR","styles","Boolean","window","location","hostname","match","defaultState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","type","payload","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab3e3de2.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/core\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header css={style}>\r\n      <FormattedMessage id=\"Header\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst style = ({ colors }: any) => css`\r\n  border-bottom: 1px ${colors.secundary[900]} solid;\r\n`;\r\n","/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/core\";\r\nimport { FormattedDate, FormattedMessage } from \"react-intl\";\r\n\r\nexport default function Body() {\r\n  return (\r\n    <div css={style}>\r\n      <title>\r\n        <FormattedMessage id=\"introduction\" />\r\n      </title>\r\n      <p>\r\n        <FormattedMessage id=\"introductionText\" />\r\n      </p>\r\n      <div>\r\n        <title>\r\n          <FormattedMessage id=\"jobExperience\" />\r\n        </title>\r\n        <p>\r\n          <JobExperienceDate value={new Date(2017, 0)} />\r\n          -\r\n          <JobExperienceDate value={new Date(2019, 8)} />- Teknisa Software\r\n        </p>\r\n        <p>\r\n          <JobExperienceDate value={new Date(2019, 9)} />\r\n          -\r\n          <JobExperienceDate value={new Date(2019, 11)} />- DTI\r\n        </p>\r\n        <p>\r\n          <JobExperienceDate value={new Date(2020, 0)} />\r\n          -\r\n          <JobExperienceDate value={new Date(2020, 3)} />- Maxmilhas\r\n        </p>\r\n        <p>\r\n          <JobExperienceDate value={new Date(2020, 4)} />\r\n          -\r\n          <JobExperienceDate value={new Date(2020, 6)} />- Freelancer\r\n          (Lavemcasa)\r\n        </p>\r\n        <p>\r\n          <JobExperienceDate value={new Date(2020, 7)} />\r\n          -\r\n          <FormattedMessage id=\"now\" />- DTI\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <title>\r\n          <FormattedMessage id=\"studyExperience\" />\r\n        </title>\r\n        <p>\r\n          <StudyExperienceDate value={new Date(2014, 0)} />\r\n          -\r\n          <StudyExperienceDate value={new Date(2016, 0)} />-\r\n          <FormattedMessage id=\"itTechnician\" /> CEFET-MG\r\n        </p>\r\n        <p>\r\n          <StudyExperienceDate value={new Date(2018, 0)} />\r\n          -\r\n          <StudyExperienceDate value={new Date(2019, 0)} />-\r\n          <FormattedMessage id=\"computingSystems\" /> PUC Minas\r\n        </p>\r\n        <p>\r\n          <StudyExperienceDate value={new Date(2020, 0)} />\r\n          -\r\n          <FormattedMessage id=\"now\" />-\r\n          <FormattedMessage id=\"computingSystems\" /> FUMEC\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <title>\r\n          <FormattedMessage id=\"contact\" />\r\n        </title>\r\n        <p>\r\n          Email:{\" \"}\r\n          <a href=\"mailto:mateusbslopes@gmail.com\">mateusbslopes@gmail.com</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst JobExperienceDate = ({ value }: any) => (\r\n  <FormattedDate value={value} year=\"numeric\" month=\"short\" />\r\n);\r\n\r\nconst StudyExperienceDate = ({ value }: any) => (\r\n  <FormattedDate value={value} year=\"numeric\" />\r\n);\r\n\r\nconst style = ({ font, sizes }: any) => css`\r\n  padding: ${sizes.margin[500]}px;\r\n`;\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\n\r\nexport default function Footer() {\r\n  return <footer css={style}>Footer</footer>;\r\n}\r\n\r\nconst style = css`\r\n`\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\nimport Header from \"./../molecules/Header\";\r\nimport Body from \"./../molecules/Body\";\r\nimport Footer from \"./../molecules/Footer\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div css={style}>\r\n      <Header />\r\n      <Body />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst style = css`\r\n  display: grid;\r\n  height: 100vh;\r\n  grid-template-rows: auto 1fr auto;\r\n`;\r\n","import dark from \"./dark\";\r\n\r\nexport default {\r\n  dark\r\n};","export default {\r\n  colors: {\r\n    primary: {\r\n      100: '#000000',\r\n    },\r\n    secundary: {\r\n      900: '#ffffff',\r\n    },\r\n    ternary: {\r\n      500: '#00B38F'\r\n    }\r\n  },\r\n  font: {\r\n    sizes: {\r\n      title: 1.6,\r\n      base: 16,\r\n    },\r\n    family:\r\n      `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;`\r\n  },\r\n  sizes: {\r\n    margin: {\r\n      200: 8,\r\n      300: 12,\r\n      400: 16,\r\n      500: 20,\r\n    }\r\n  }\r\n}","export default {\r\n  // Time\r\n  now: \"atualmente\",\r\n\r\n  // Header\r\n  Header: \"Cabeçalho\",\r\n  \r\n  // Body\r\n  // Introduction\r\n  introduction: \"Introdução\",\r\n  introductionText: \"Olá! Eu sou o Mateus Lopes. Sou um desenvolvedor frontend que gosta muito de estudar acessibilidade. E, sendo sincero esse é o maior motivo de eu ter criado este site :)\",\r\n\r\n  // Work\r\n  jobExperience: \"Experiência\",\r\n\r\n  // Study\r\n  studyExperience: \"Formação\",\r\n  itTechnician: \"Técnico em Informática\",\r\n  computingSystems: \"Sistemas da Informação\",\r\n\r\n  // Contact\r\n  contact: \"Contato\",\r\n\r\n}","import React from \"react\";\r\nimport Home from \"./components/pages/Home\";\r\nimport { Global, css } from \"@emotion/core\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { ThemeProvider } from \"emotion-theming\";\r\nimport themes from \"./themes\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport loadTranslations from \"./translations\";\r\n\r\nfunction App({ theme, locale }: AppProps) {\r\n  return (\r\n    <ThemeProvider theme={(themes as any)[theme]}>\r\n      <IntlProvider locale={locale} messages={loadTranslations(locale)}>\r\n        <Global styles={style} />\r\n        <Home />\r\n      </IntlProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst style = ({colors, font}: any) => {\r\n  return css`\r\n    html {\r\n      color: ${colors.secundary[900]};  \r\n      background-color: ${colors.primary[100]};\r\n      font-size: ${font.sizes.base}px;\r\n      font-family: ${font.family};\r\n    }\r\n\r\n    body {\r\n      margin: 0;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    title {\r\n      display: unset;\r\n      font-size: ${font.sizes.title}rem;\r\n      color: ${colors.ternary[500]};\r\n    }\r\n\r\n    a {\r\n      color: ${colors.ternary[500]};\r\n      text-decoration: none;\r\n    }\r\n  `;\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  theme: state.theme.name,\r\n  locale: state.localization.locale,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\ntype AppProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(App);\r\n","import ptBR from \"./pt-BR\";\r\n\r\nexport default (locale: string) => {\r\n  switch (locale) {\r\n    default:\r\n      return ptBR;\r\n  }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ThemePayload } from \"../../types\";\r\n\r\nexport const SET_THEME = \"SET_THEME\";\r\n\r\nexport const setTheme = (theme: string) => ({\r\n  type: SET_THEME,\r\n  payload: { theme }\r\n});\r\n\r\nconst defaultState = {\r\n  name: \"dark\"\r\n};\r\n\r\nexport default function (state = defaultState, { type, payload }: ThemePayload) {\r\n  switch (type) {\r\n    case SET_THEME:\r\n      return { ...state, name: payload.theme };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LocalizationPayload } from \"../../types\";\r\n\r\nexport const SET_LOCALIZATION = \"SET_LOCALIZATION\";\r\n\r\nexport const setTheme = (locale: string) => ({\r\n  type: SET_LOCALIZATION,\r\n  payload: { locale }\r\n});\r\n\r\nconst defaultState = {\r\n  locale: \"pt-BR\"\r\n};\r\n\r\nexport default function (state = defaultState, { type, payload }: LocalizationPayload) {\r\n  switch (type) {\r\n    case SET_LOCALIZATION:\r\n      return { ...state, locale: payload.locale };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport theme from \"./theme\";\r\nimport localization from \"./localization\";\r\nlet store;\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nstore = createStore(\r\n  combineReducers({\r\n    theme,\r\n    localization,\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport type Store = ReturnType<typeof store>\r\nexport default store as Store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/ducks\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}